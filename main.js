(()=>{"use strict";class t{constructor(t){this.server=`${t}helpdesk`}get(t){const e=new XMLHttpRequest;return new Promise(((i,s)=>{e.open("GET",`${this.server}${t}`),e.addEventListener("readystatechange",(()=>{if(4===e.readyState&&e.status>=200&&e.status<300)try{i(e.response)}catch(t){s(t)}})),e.send()}))}update(t,e,i){const s=new XMLHttpRequest;return new Promise((n=>{s.open(t,`${this.server}${e}`),s.addEventListener("readystatechange",(()=>{4===s.readyState&&204===s.status&&n(s.response)})),s.send(i)}))}allTickets(){return this.get("?method=allTickets")}ticketById(t){return this.get(`?method=ticketById&id=${t}`)}createTicket(t,e,i){const s=new URLSearchParams;return s.append("title",t),s.append("description",e),s.append("status",i),this.update("POST","?method=createTicket",s)}removeTicket(t){const e=new URLSearchParams;return e.append("currentId",t),this.update("DELETE",`/${t}`,e)}changeStatus(t){const e=new URLSearchParams;return e.append("currentId",t),this.update("PUT",`/${t}`,e)}editTicket(t,e,i){const s=new URLSearchParams;return s.append("currentId",t),s.append("title",e),s.append("description",i),this.update("PUT",`/${t}`,s)}}class e{constructor(){this.hidePopup=this.hidePopup.bind(this),this.createPopup=this.createPopup.bind(this)}createPopup(){this.popupContainer=document.createElement("div"),this.popupContainer.classList.add("popup"),this.popupContainer.innerHTML='\n      <div class="popup__body">\n        <div class="popup__content">\n          <h3 class="popup__title">Добавить тикет</h3>\n          <form class="form">\n            <div class="form__row">\n              <label class="form__group">\n                <span class="form-group__hint">Краткое описание</span>\n                <input type="text" class="form-group__field" required>\n              </label>\n            </div>\n            <div class="form__row">\n              <label class="form__group">\n                  <span class="form-group__hint">Подробное описание</span>\n                  <textarea type="text" class="form-group__field form-group__textbox"></textarea>\n              </label>\n            </div>\n            <div class="form__row">\n              <div class="form__control">\n                <button class="form-control__button button button__cancel">Отмена</button>\n                <button class="form-control__button button button__save">Ok</button>\n              </div>\n            </div>\n          </form> \n        </div>\n      </div>\n    ',this.form=this.popupContainer.querySelector("form"),this.title=this.form.querySelector("input.form-group__field"),this.description=this.form.querySelector("textarea.form-group__field"),this.cancelBtn=this.form.querySelector(".button__cancel"),this.saveBtn=this.form.querySelector(".button__save"),this.popupContainer.addEventListener("click",this.onClickOver.bind(this))}showPopup(t,e){document.body.appendChild(this.popupContainer),this.cancelBtn.addEventListener("click",this.hidePopup),e&&(this.title.value=e.title,this.description.value=e.description),this.form.addEventListener("submit",this.check.bind(this,t))}createWarning(t){this.popupContainer=document.createElement("div"),this.popupContainer.classList.add("popup"),this.popupContainer.innerHTML='\n      <div class="popup__body">\n        <div class="popup__content">\n            <h3 class="popup__title">Удалить тикет</h3>\n            <span class="form-group__hint">Вы уверены, что хотите удалить тикет? Это действие необратимо.</span>\n            <div class="form__row">\n              <div class="form__control">\n                <button class="form-control__button button button__cancel">Отмена</button>\n                <button class="form-control__button button button__save">Ok</button>\n              </div>\n            </div>\n        </div>\n      </div>\n    ',document.body.appendChild(this.popupContainer),this.cancelBtn=this.popupContainer.querySelector(".button__cancel"),this.saveBtn=this.popupContainer.querySelector(".button__save"),this.cancelBtn.addEventListener("click",this.hidePopup),this.saveBtn.addEventListener("click",t),this.popupContainer.addEventListener("click",this.onClickOver.bind(this))}hidePopup(){this.popupContainer.remove()}check(t,e){e.preventDefault(),(this.title.value||this.description.value)&&t()}onClickOver(t){t.target.classList.contains("popup__body")&&(t.preventDefault(),this.hidePopup())}}class i{constructor(t,e,i,s){this.id=t,this.title=e,this.status=s;const n=this.status?"done":"empty",o=new Date(i).toLocaleString().substring(0,10),c=new Date(i).toLocaleTimeString().substring(0,5);this.ticket=document.createElement("div"),this.ticket.classList.add("helpdesk__ticket"),this.ticket.innerHTML=`\n      <div class="helpdesk-ticket__status control__button button ${n}"></div>\n      <div class="helpdesk-ticket__description">\n        <span class="ticket-description__text">${e}</span>\n      </div>\n      <div class="helpdesk-ticket__control">\n        <div class="ticket-control__created">${o} ${c}</div>\n        <div class="ticket-control__editing control__button button">✎</div>\n        <div class="ticket-control__removing control__button button">✘</div>\n      </div>\n    `}}new class{constructor(i){this.container="string"==typeof i?document.querySelector(i):i,this.request=new t("https://kira-heroku.herokuapp.com/"),this.popup=new e,this.tickets=[],this.addTicket=this.addTicket.bind(this),this.editTicket=this.editTicket.bind(this),this.onChangeTicket=this.onChangeTicket.bind(this)}bindToDOM(){document.querySelector(".helpdesk-control__add").addEventListener("click",(()=>{this.popup.createPopup(),this.popup.showPopup(this.addTicket)})),this.showDesk()}showDesk(){this.request.allTickets().then((t=>{this.tickets=[],this.container.innerHTML="",JSON.parse(t).forEach((t=>{const e=new i(t.id,t.title,t.created,t.status);this.tickets.push(e)})),this.tickets.forEach((t=>this.container.appendChild(t.ticket))),this.container.addEventListener("click",this.onChangeTicket)}))}addTicket(){const t=this.popup.description.value||"Описания нет",e=this.request.createTicket(this.popup.title.value,t,!1);this.popup.hidePopup(),e.then((()=>this.showDesk()))}removeTicket(t){this.popup.hidePopup();this.request.removeTicket(t).then((()=>this.showDesk()))}onChangeTicket(t){const{target:e}=t,i=e.closest(".helpdesk__ticket"),s=this.tickets.find((t=>t.ticket===i));if(e.classList.contains("helpdesk-ticket__status")&&this.changeStatus(s.id),e.classList.contains("ticket-description__text")){e.addEventListener("mousedown",(()=>!1)),e.addEventListener("selectstart",(()=>!1));const t=i.querySelector(".ticket-description__complete-text");t?t.remove():this.showDescription(s)}if(e.classList.contains("ticket-control__editing"))if(s.description)this.popup.createPopup(),this.popup.showPopup((()=>this.editTicket(s)),s);else{this.request.ticketById(s.id).then((t=>{const{description:e}=JSON.parse(t);s.description=e,this.popup.createPopup(),this.popup.showPopup((()=>this.editTicket(s)),s)}))}e.classList.contains("ticket-control__removing")&&this.popup.createWarning((()=>this.removeTicket(s.id)))}changeStatus(t){this.request.changeStatus(t).then((()=>this.showDesk()))}showDescription(t){const e=t.ticket.querySelector(".helpdesk-ticket__description");if(t.description){const i=document.createElement("div");i.classList.add("ticket-description__complete-text"),i.innerHTML=`<p>${t.description}</p>`,e.appendChild(i)}else{this.request.ticketById(t.id).then((i=>{const s=document.createElement("div");s.classList.add("ticket-description__complete-text"),({description:t.description}=JSON.parse(i)),s.innerHTML=`<p>${t.description}</p>`,e.appendChild(s)}))}}editTicket(t){const e=this.popup.description.value||"Описания нет",i=this.request.editTicket(t.id,this.popup.title.value,e);this.popup.hidePopup(),i.then((()=>this.showDesk()))}}(".helpdesk__wrapper").bindToDOM()})();